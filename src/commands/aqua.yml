description: >
  Install aqua and run aqua install.

  1. Install aqua
  2. Add AQUA_ROOT_DIR/bin to PATH via $BASH_ENV
  3. On Windows, add AQUA_ROOT_DIR/bat to PATH via $BASH_ENV
  4. (Optional) Run "aqua policy allow"
  5. (Optional) Run "aqua install"
parameters:
  aqua_version:
    type: string
    description: >
      aqua version.
  enable_aqua_install:
    type: boolean
    default: true
    description: >
      if this is "false", the command "aqua install" is skipped
  aqua_log_level:
    type: string
    default: ""
    description: >
      aqua's "--log-level" option
  aqua_config:
    type: string
    default: ""
    description: >
      aqua's "--config" option
  aqua_only_link:
    type: boolean
    default: true
    description: >
      aqua i's "--only-link" option
  aqua_all:
    type: boolean
    default: false
    description: >
      aqua i's "--all" option
  aqua_tags:
    type: string
    default: ""
    description: >
      aqua i's "--tags" option
  aqua_exclude_tags:
    type: string
    default: ""
    description: >
      aqua i's "--exclude-tags" option

  policy_allow:
    type: string
    default: ""
    description: >
      If this is "true", "aqua policy allow" is run without any argument.
      If this is empty (default), "aqua policy allow" isn't run.
      If this isn't "true", "aqua policy allow << parameters.policy_allow >>" is run

  working_directory:
    type: string
    default: ""
    description: >
      working directory where "aqua install" is run
steps:
  - run:
      name: Install aqua
      environment:
        AQUA_VERSION: << parameters.aqua_version >>
        POLICY_ALLOW: << parameters.policy_allow >>
        ENABLE_AQUA_INSTALL: << parameters.enable_aqua_install >>
        WORKING_DIRECTORY: << parameters.working_directory >>
        LOG_LEVEL: << parameters.aqua_log_level >>
        CONFIG: << parameters.aqua_config >>
        ONLY_LINK: << parameters.aqua_only_link >>
        ALL: << parameters.aqua_all >>
        TAGS: << parameters.aqua_tags >>
        EXCLUDE_TAGS: << parameters.aqua_exclude_tags >>
      command: |
        set -eu
        set -o pipefail || :
        
        uname_os() {
          local os
          os=$(uname -s | tr '[:upper:]' '[:lower:]')
          case "$os" in
            cygwin_nt*) os="windows" ;;
            mingw*) os="windows" ;;
            msys_nt*) os="windows" ;;
          esac
          echo "$os"
        }
        
        uname_arch() {
          local arch
          arch=$(uname -m)
          case $arch in
            x86_64) arch="amd64" ;;
            aarch64) arch="arm64" ;;
          esac
          echo ${arch}
        }

        is_true() {
          val=$1
          [ "$val" = true ] || [ "$val" = True ] || [ "$val" = y ] || [ "$val" = yes ] || [ "$val" = on ] || [ "$val" = 1 ]
        }

        if [ -n "$LOG_LEVEL" ]; then
          export "AQUA_LOG_LEVEL=$LOG_LEVEL"
        fi
        if [ -n "$CONFIG" ]; then
          export "AQUA_CONFIG=$CONFIG"
        fi
        opts=""
        if is_true "$ONLY_LINK"; then
          opts=-l
        fi
        if is_true "$ALL"; then
          opts="-a $opts"
        fi
        if [ -n "$TAGS" ]; then
          opts="-t \"$TAGS\" $opts"
        fi
        if [ -n "$EXCLUDE_TAGS" ]; then
          opts="-exclude-tags \"$EXCLUDE_TAGS\" $opts"
        fi
        
        OS="$(uname_os)"
        ARCH="$(uname_arch)"
        
        install_path=${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin/aqua
        if [ "$OS" = windows ]; then
          install_path=${AQUA_ROOT_DIR:-$HOME/AppData/Local/aquaproj-aqua}/bin/aqua.exe
        fi

        bootstrap_version=v2.51.2
        checksums="ccca5f1c6473aa1fe67f84b244656290ac72e26998ef3479e00843b6b3e52650  aqua_darwin_amd64.tar.gz
        4ff9a263f6125369b391d37ad6593a8b987aae672c311f61859c4db986732357  aqua_darwin_arm64.tar.gz
        17db2da427bde293b1942e3220675ef796a67f1207daf89e6e80fea8d2bb8c22  aqua_linux_amd64.tar.gz
        b3f0d573e762ce9d104c671b8224506c4c4a32eedd1e6d7ae1e1e39983cdb6a8  aqua_linux_arm64.tar.gz
        bcac8677b632009ba9b561d38dddb0e07c55c5ac4690e0deb1a24b9e0cf282c8  aqua_windows_amd64.zip
        3d76eaaf9211aeb6186f1829ff21930a798a45163fac58c4ab5aa753a3220616  aqua_windows_arm64.zip"

        filename=aqua_${OS}_${ARCH}.tar.gz
        if [ "$OS" = windows ]; then
        	filename=aqua_${OS}_${ARCH}.zip
        fi
        URL=https://github.com/aquaproj/aqua/releases/download/$bootstrap_version/$filename
        
        tempdir=$(mktemp -d)
        echo "[INFO] Installing aqua $bootstrap_version for bootstrapping..." >&2
        echo "[INFO] Downloading $URL ..." >&2
        if command -v curl > /dev/null 2>&1; then
        	curl --fail -L "$URL" -o "$tempdir/$filename"
        elif command -v wget > /dev/null 2>&1; then
        	wget -P "$tempdir" "$URL"
        else
        	echo "[ERROR] Neither curl nor wget is found. Please install either curl or wget to download aqua" >&2
        	exit 1
        fi
        
        pwd=$PWD
        cd "$tempdir"
        
        echo "[INFO] Verifying checksum of aqua $bootstrap_version ..." >&2
        if command -v sha256sum > /dev/null 2>&1; then
          echo "$checksums" | grep "$filename" | sha256sum -c
        elif command -v shasum > /dev/null 2>&1; then
          echo "$checksums" | grep "$filename" | shasum -a 256 -c
        else
        	echo "Skipped checksum verification of aqua $bootstrap_version, because both sha256sum and shasum aren't found" >&2
        fi
        
        if [ "$OS" = windows ]; then
        	unzip "$filename" > /dev/null
        else
        	tar xvzf "$filename" > /dev/null
        fi
        chmod a+x aqua

        export "PATH=$(./aqua root-dir)/bin::$PATH"
        echo "export \"PATH=$(./aqua root-dir)/bin:$PATH\"" >> "$BASH_ENV"
        if [ "$OS" = windows ]; then
          export "PATH=$(./aqua root-dir)/bat:$PATH"
          echo "export \"PATH=$(./aqua root-dir)/bat:$PATH\"" >> "$BASH_ENV"
        fi

        echo "[INFO] $tempdir/aqua update-aqua $AQUA_VERSION" >&2
        ./aqua update-aqua "$AQUA_VERSION"
        
        cd "$pwd/$WORKING_DIRECTORY"
        rm -R "$tempdir"

        if [ "$POLICY_ALLOW" = true ]; then
          echo "[INFO] aqua policy allow" >&2
          aqua policy allow
          exit 0
        fi
        if [ -n "$POLICY_ALLOW" ]; then
          echo '[INFO] aqua policy allow $POLICY_ALLOW' >&2
          aqua policy allow "$POLICY_ALLOW"
        fi

        if is_true "$ENABLE_AQUA_INSTALL"; then
          echo "aqua i $opts" >&2
          aqua i $opts
        fi
